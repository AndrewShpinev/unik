;Пример инициализации TMS320C40

;Создание таблицы векторов прерываний
;
_myvect.sect"myvect";Создаём секцию для векторов прерываний
reset .word_c_int00 ;RESET вектор
		   .space 1 ;Резервируем место для NMI прерывания
;
;Создаём таблицу векторов программных прерываний
;
_mytrap.sect"mytrap" ;Секция для векторов программных прерываний

;
;Создаём стек
;
_mystack.usect"mystack",100 ;резервирусем 100 слова под стек

			.text
stacka		.word_mystack ;адрес mystack секции
ivta .word_myvect ;адрес myvect секции
tvta .word_mytrap ;адрес mytrap секции
ieval .word 1 ;значения регистра разрешения прерываний
gctrl .word 1EE78000h ;значения регистра управления памятью
lctrl .word 1EF78000h ;значения регистра управления памятью
mctrla		.word 100000h ;адрес регистра управления глобальной памятью

_c_int00: ;точка входа в программу, при reset начинаем отсюда
;
;Инициализация регистра DP
		ldp stacka
;
;Устанавливаем указатель на таблицу прерываний
;
		ldi @ivta,AR0
		ldpe AR0,IVTP
;
;Устанавливаем указатель на таблицу программных прерываний
;
		ldi @tvta,AR0
		ldpe AR0,TVTP
;
;Инициализируем регистр управления глобальной памятью
;
		ldi @mctrla,AR0
		ldi @gctrl,R0
		sti R0,*AR0
;
;Инициализируем регистр управления локальной памятью
;
		ldi @lctrl,R0
		sti R0,*+AR0(4)
;
;Инициализируем указатель стека
;
		ldi @stacka,SP
;
;Инициализируем регистр разрешения прерываний
;Запись 1 в IIE разрешает прерывание таймера
;
		ldi @ieval,IIE
;
;Глобально разрешаем прерывания, очищаем и разрешаем кэш
;
		or 3800h,ST
		
		BR begin ;переход к началу приложения
	nop
	nop
	nop
begin ;начало программы
	  ;<<Вставьте сюда код вашего приложения>>
	  
stop br stop ;конец программы
	nop
	nop
	nop
.end